"use client"
import { create } from "zustand"
import { devtools } from "zustand/middleware"

interface Category {
    id: string
    name: string
    userId: string
}

interface CategoryState {
    categories: Category[]
    selectedCategoryId: string | null // üÜï null = All Cards
    setCategories: (categories: Category[]) => void
    setSelectedCategory: (categoryId: string | null) => void
    addCategory: (category: Category) => void // üÜï –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    deleteCategory: (id: string) => void
}

export const useCategoryStore = create<CategoryState>()(
    devtools((set) => ({
        categories: [],
        selectedCategoryId: null, // üÜï –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é "–í—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏"

        setCategories: (categories) => set({ categories }),
        setSelectedCategory: (categoryId) => set({ selectedCategoryId: categoryId }),
        addCategory: (category) =>
            set((state) => ({
                categories: [...state.categories, category], // üî• –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤
                selectedCategoryId: category.id, // üìå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º –µ—ë
            })),
        deleteCategory: (id) =>
            set((state) => ({
                categories: state.categories.filter((category) => category.id !== id),
                selectedCategoryId: state.selectedCategoryId === id ? null : state.selectedCategoryId, // üõ† –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚Üí —Å–±—Ä–∞—Å—ã–≤–∞–µ–º
            })),
    })),
)

